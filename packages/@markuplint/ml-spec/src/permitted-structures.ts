/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type PermittedContent =
	| PermittedContentRequire
	| PermittedContentOptional
	| PermittedContentOneOrMore
	| PermittedContentZeroOrMore
	| PermittedContentChoice
	| PermittedContentInterleave;
export type Target = Node | Node[];
export type Node = string | '#text' | ContentModel;
export type ContentModel =
	| '#phrasing'
	| '#flow'
	| '#interactive'
	| '#heading'
	| '#sectioning'
	| '#metadata'
	| '#transparent'
	| '#embedded'
	| '#palpable'
	| '#script-supporting';
export type PermittedContentSpec = PermittedContent[];

export interface PermittedStructuresSchema {
	summary?: string;
	tag: string;
	conditional?: {
		condition:
			| {
					hasAttr: string;
			  }
			| {
					parent: string;
			  };
		contents: PermittedContentSpec | boolean;
	}[];
	contents: PermittedContentSpec | boolean;
	ancestor?: Node;
}
export interface PermittedContentRequire {
	require: Target;
	ignore?: Target;
	notAllowedDescendants?: Node[];
	max?: number;
	min?: number;
}
export interface PermittedContentOptional {
	optional: Target;
	ignore?: Target;
	notAllowedDescendants?: Node[];
	max?: number;
}
export interface PermittedContentOneOrMore {
	oneOrMore: Target | PermittedContentSpec;
	ignore?: Target;
	notAllowedDescendants?: Node[];
	max?: number;
}
export interface PermittedContentZeroOrMore {
	zeroOrMore: Target | PermittedContentSpec;
	ignore?: Target;
	notAllowedDescendants?: Node[];
	max?: number;
}
export interface PermittedContentChoice {
	choice:
		| [PermittedContentSpec, PermittedContentSpec]
		| [PermittedContentSpec, PermittedContentSpec, PermittedContentSpec]
		| [PermittedContentSpec, PermittedContentSpec, PermittedContentSpec, PermittedContentSpec]
		| [
				PermittedContentSpec,
				PermittedContentSpec,
				PermittedContentSpec,
				PermittedContentSpec,
				PermittedContentSpec,
		  ];
}
export interface PermittedContentInterleave {
	interleave: [PermittedContentSpec, PermittedContentSpec, ...PermittedContentSpec[]];
}
