name: Test

on:
    pull_request:
        branches:
            - dev
            - next
        paths:
            - '**'
            - '!**/*.md'
            - '!vscode/**'
            - '!website/**'

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                node: [18]
                include:
                    - node: 20
                      os: ubuntu-latest
                      experimental: true
                shard: [1/3, 2/3, 3/3]
        steps:
            - uses: actions/checkout@v3
              with:
                  # SEE: https://github.com/lerna/lerna/issues/2542
                  fetch-depth: '0'

            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node }}

            - name: Create .yarnrc for Windows
              if: runner.os == 'Windows'
              run: echo "network-timeout 600000" > .yarnrc

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: '**/node_modules'
                  key: os-${{ matrix.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies
              run: yarn install

            - name: Bootstrap
              run: yarn bootstrap

            - name: Build
              run: yarn build

            - name: Test
              run: yarn jest --useStderr --coverage --shard=${{ matrix.shard }} && cat ./coverage/lcov.info | yarn coveralls # `jest:coverage` + shard option
